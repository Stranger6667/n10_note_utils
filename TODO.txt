* normalize_text_line: markdown marker不应该参与normalize，主要是“中文标点前后都不需要空格”这一点，比如"# 【测试】标题"，还有比如"# )xxx"这样的，虽然不规范，但也是一个level1 heading

multiline cell中如果出现 "* item1{nl}* 【item2】"这样的，仍然会导致问题呀

    list_markers_re = regex.compile(r'[ ]*(?P<markdown_marker>[-*+]|[0-9]+\.|Q:|q:|A:|a:)[ ]')
    blockquote_re = regex.compile(r'[ ]{,3}(?P<quote_marker>>(?:$|[> ]*))')
    markdown_header_re = regex.compile(r'[ ]{,3}(?P<header_marker>#{1,6})[ ]')
	
多个空格被缩减为一个也会导致multiline cell中的缩进失效！！！

multiline cell太复杂了！！！

由于note processor处理的对象是摘抄笔记，出现multiline cell的情况应该极少，所以我暂时不考虑处理这种复杂的情形


--------------------

{{html2markdown}}: 优先处理html, 如果没有，则当text处理

会遇到四种情况：
* 只有text
* 只有html
* 先on_text后on_html
* 先on_html后on_text

有的软件text和html会分开来存放, 所以，如果先遇到on_html，随后的on_text不一定是一伙的！！！


只能放到on_update来实现，因为这里有所有数据：

on_text --> on_text: 如果数据一致，则跳过 ---> on_html: 如果此时text的内容和之前on_text收到的一致，则是一伙的，转为markdown写入Notes.md

on_text --> on_text: 如果数据不一致，说明这是另一次拷贝，将前一个的on_text放入到work queue，再把当前的也放入work queue

on_html -> 转为markdown写入Notes.md -> on_text，如果此时html值之 前的on_html的一致，则是一伙的，跳过，如果没有html值，则不是一伙的 -> on_text: 如果数据一致，则跳过，如果不一致，说明是另一次拷贝

上述流程中，如果遇到特殊的marker，则认为前一个流程已经走完了，按当前情况进行处理

这种处理流程有一个缺点：如果先遇到text，则不能立即写入文件，需要等待下一次的剪贴板变化，如果用户不再拷贝文字了，就要想办法在适当的时机写入，所以这里还涉及到定时器，这个定时器的时间该是多长呢？以adobe acrobat的一次流程为准，这是目前遇最复杂的， 大约400ms， 500ms是比较好的

DEBUG:root:1671899443.3339784: update message received: 10539
DEBUG:root:num clips: 0
DEBUG:root:1671899443.3614051: update message received: 10544
DEBUG:root:close clipboard error
DEBUG:root:get clipboard content failed
DEBUG:root:1671899443.3664033: update message received: 10546
DEBUG:root:num clips: 1
DEBUG:root:on text, seq_no: 10546
DEBUG:root:window title: Martin H. Manser, David Pickering, Rosalind Fergusson, Jonathon Green, Jenny Roberts, Elizabeth McLaren Kirkpatrick - Good Word Guide_ The Fast Way to Correct English_ Spelling, Punctuation, Grammar a.pdf - Adobe Acrobat Pro DC (64-bit)
DEBUG:root:page number and filename image grabed.
DEBUG:root:extract_filename: Martin H. Manser, David Pickering, Rosalind Fergusson, Jonathon Green, Jenny Roberts, Elizabeth McLaren Kirkpatrick - Good Word Guide_ The Fast Way to Correct English_ Spelling, Punctuation, Grammar a.pdf - Adobe Acrobat Pro DC (64-bit)
DEBUG:root:filename: Martin H. Manser, David Pickering, Rosalind Fergusson, Jonathon Green, Jenny Roberts, Elizabeth McLaren Kirkpatrick - Good Word Guide_ The Fast Way to Correct English_ Spelling, Punctuation, Grammar a.pdf
DEBUG:root:1671899443.5955203: update message received: 10547
DEBUG:root:num clips: 1
DEBUG:root:on text, seq_no: 10547
DEBUG:root:duplicate text, ignore
DEBUG:root:page number ocr: WF

DEBUG:root:page number: None
DEBUG:root:page number ocr: 99 (114 of 353)

DEBUG:root:page number: 114
DEBUG:playsound:Starting
DEBUG:playsound:Returning

----

大段文字:

DEBUG:root:1671930800.790385: update message received: 10859
DEBUG:root:num clips: 0
DEBUG:root:1671930800.8397841: update message received: 10864
DEBUG:root:open clipboard failed
DEBUG:root:close clipboard error
DEBUG:root:get clipboard content failed
DEBUG:root:1671930800.8599205: update message received: 10867
DEBUG:root:num clips: 1
DEBUG:root:on text, seq_no: 10867
DEBUG:root:window title: Martin H. Manser, David Pickering, Rosalind Fergusson, Jonathon Green, Jenny Roberts, Elizabeth McLaren Kirkpatrick - Good Word Guide_ The Fast Way to Correct English_ Spelling, Punctuation, Grammar a.pdf - Adobe Acrobat Pro DC (64-bit)
DEBUG:root:page number and filename image grabed.
DEBUG:root:extract_filename: Martin H. Manser, David Pickering, Rosalind Fergusson, Jonathon Green, Jenny Roberts, Elizabeth McLaren Kirkpatrick - Good Word Guide_ The Fast Way to Correct English_ Spelling, Punctuation, Grammar a.pdf - Adobe Acrobat Pro DC (64-bit)
DEBUG:root:filename: Martin H. Manser, David Pickering, Rosalind Fergusson, Jonathon Green, Jenny Roberts, Elizabeth McLaren Kirkpatrick - Good Word Guide_ The Fast Way to Correct English_ Spelling, Punctuation, Grammar a.pdf
DEBUG:root:1671930801.1080282: update message received: 10867
DEBUG:root:clipboard sequence number not changed, ignore
DEBUG:root:page number ocr: WF

DEBUG:root:page number: None
DEBUG:root:page number ocr: 99 (114 of 353)

DEBUG:root:page number: 114
DEBUG:playsound:Starting
DEBUG:playsound:Returning



---------

look up dictionary:

DEBUG:root:1671899554.6089692: update message received: 10581
DEBUG:root:num clips: 1
DEBUG:root:on text, seq_no: 10581
DEBUG:root:1671899554.669958: update message received: 10582
DEBUG:root:num clips: 0
DEBUG:root:1671899554.6939604: update message received: 10587
DEBUG:root:close clipboard error
DEBUG:root:get clipboard content failed
DEBUG:root:1671899554.6999586: update message received: 10589
DEBUG:root:num clips: 1
DEBUG:root:on text, seq_no: 10589
DEBUG:root:1671899554.7029595: update message received: 10590
DEBUG:root:num clips: 1
DEBUG:root:on text, seq_no: 10590
DEBUG:root:window title: Dialog
DEBUG:root:page number and filename image grabed.
DEBUG:root:extract_filename: Dialog
DEBUG:root:filename: Dialog
DEBUG:root:page number ocr: WF

DEBUG:root:page number: None
DEBUG:root:page number ocr: 99 (114 of 353)

DEBUG:root:page number: 114
DEBUG:playsound:Starting
DEBUG:playsound:Returning

------


on_update如何实现呢？

-> 内容发生改变（注意：不是seqno发生改变）即意味着一个新的session的开始，计时器复位
-> 计时器到0时，调用session.finish()
	-> session存入last_session
	-> 如果计时器到0 finish之后，随后的clipboard update的内容和前一个session相关怎么办？
-> 遇到image，也会强制调用session.finish()
    -> 如果恰好和计时器到0同时，如何处理冲突？
-> session.finish: 
    * 如果cur_decorator不为none，则decorate，如果deco_result为none，不放入queue，也不会更新last_session，而是放入last_decorator_removed_session中
    * 如果没有cur_decorator或者有但是deco_result不为None，则放入queue，更新last_session
-> image无条件放入，不涉及session
-> {{lookupdictionary}}这样的字符串不涉及session，只会更新当cur_decorator


-----> 注：这个处理流程意味着，除非有image的介入，否则我们处理每个拷贝的时间都是固定的0.5s时长，0.5秒够么？如果用户拷贝了大量文本，session的时间会不会超过0.5s? 是否要根据文本长度进行时间微调？做笔记的时候会选很大段的文字？
	
	
两个session相等的条件：

* 如果有html和text: 则需要两者都相等
* 如果只有html和text之一，则任意一个匹配都认为相等